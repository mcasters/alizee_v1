// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String
  isAdmin   Boolean @default(true)
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String?
  published Boolean  @default(false)
  tags      Tag[]
  viewCount Int      @default(0)
  mainImage PostImage?   @relation("postImage")
  images    PostImage[]  @relation("postAlbumImages")
}

model PostImage {
  id          Int     @id @default(autoincrement())
  filename    String
  width       Int
  height      Int
  postImg     Post?   @relation("postImage", fields: [postImgId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  postImgId   Int?    @unique
  postAlbum   Post?    @relation("postAlbumImages", fields: [postAlbumId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  postAlbumId Int?
}

model HorseImage {
  id           Int     @id @default(autoincrement())
  filename     String
  width        Int
  height       Int
  horseImg     Horse?   @relation("horseImage", fields: [horseImgId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  horseImgId   Int?    @unique
  horseAlbum   Horse?    @relation("horseAlbumImages", fields: [horseAlbumId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  horseAlbumId Int?
}

model Tag {
  id    Int    @id @default(autoincrement())
  label String @unique
  posts Post[]
}

model Horse {
  id          Int     @id @default(autoincrement())
  name        String
  owner       String
  sex         String
  colour      String
  dateOfBirth DateTime
  height      Int
  sire        String
  dam         String
  damSire     String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  mainImage   HorseImage?   @relation("horseImage")
  images      HorseImage[]  @relation("horseAlbumImages")
}